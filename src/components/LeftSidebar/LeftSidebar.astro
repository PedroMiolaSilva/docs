---
import { removeLeadingSlash,  getLanguageFromURL} from '../../util';
import { getNavigationMenu } from '../../util/getNav';
import { useTranslations } from '../../i18n/util';
import LeftSidebarPanelMenu from '../leftsidebarpanelmenu/LeftSidebarPanelMenu.vue';
// import SidebarContent from './SidebarContent.astro';
// import CommunityMenu from '../RightSidebar/CommunityMenu.astro';

export interface Props {
	currentPage: string;
	menuType: string;
}

const t = useTranslations(Astro);
const lang = getLanguageFromURL(Astro.url.pathname);

const { currentPage, menuType = 'nav' } = Astro.props as Props;
const currentPageMatch = removeLeadingSlash(currentPage);

const sidebarSections = (await getNavigationMenu(Astro, menuType)).reduce((collection, item) => {
	collection.push({...item});
	return collection
}, []);
---

<nav
	aria-label={t('leftSidebar.a11yTitle')}>
	
	<LeftSidebarPanelMenu
		lang={lang}
		client:only="vue"
		datamodel={sidebarSections}
		currentPageMatch={currentPageMatch} 
	/>
</nav>

<!-- Preserve sidebar scroll across page loads -->
<!--
<script is:inline>
{
	const leftSidebar = document.querySelector('.nav-groups');
	const leftSidebarScroll = localStorage.getItem('sidebar-scroll');
	if (leftSidebarScroll !== null) {
		leftSidebar.scrollTop = parseInt(leftSidebarScroll, 10);
	}
	window.addEventListener('beforeunload', () => {
		localStorage.setItem('sidebar-scroll', leftSidebar.scrollTop);
	});
}
</script>
-->

<style lang="scss">
	nav {
		height: 100%;
		overflow-x: hidden;
		scrollbar-gutter: stable;
	}
</style>
