---
import { getLanguageFromURL } from '~/util';
import { isSubPage, isSubMenu } from '~/util/isSubPage';
import { removeLeadingSlash, removeTrailingSlash } from '~/util'
import ExternalLinkIcon from '~/components/icons/ExternalLinkIcon.astro'

export interface Props {
	type: TabType;
	defaultActiveTab: TabType;
	sidebarSections: Array<{
		text: string;
		type: TabType;
		anchor?: boolean;
		onlyMobile?: boolean;
		slug?: string;
		isFallback?: boolean;
		children: Array<{ text: string; slug: string; isFallback?: boolean }>;
	}>;
	currentPageMatch: string;
}
type TabType = 'learn';

const { type, defaultActiveTab, sidebarSections, currentPageMatch } = Astro.props as Props;
const lang = getLanguageFromURL(Astro.url.pathname);

const modelSlug = (slug: string | undefined, isFallback: boolean | undefined, lang: string) => {
	if (typeof slug !== 'string') return
	if (slug.includes('https')) return slug
	return `/${isFallback ? 'en' : lang}/${removeTrailingSlash(removeLeadingSlash(slug))}/`
}
---	
{
	sidebarSections.map(({ onlyMobile, anchor, slug, isFallback, text, children }) => {
		const summaryClass = onlyMobile && anchor ? 'hide-item-desktop' : ''
		return (
			<li class:list={['nav-group', type, defaultActiveTab === type && 'active', summaryClass]}>
					{ anchor ? (
						<div class='nav-group-title' data-current-parent={`${isSubPage(currentPageMatch, `/${lang}/${slug}`) ? 'true' : 'false'}`}>
							<h2 class="nav-link-title">
								<a
									data-current-parent={`${isSubPage(currentPageMatch, `/${lang}/${slug}`) ? 'true' : 'false'}`}
									href={modelSlug(slug, isFallback, lang)} target={slug?.includes('https') ? "_blank" : "_self"}> 
									<Fragment set:html={text} />
								</a>
								{slug?.includes('https') &&
									<ExternalLinkIcon color="var(--theme-text)" />
								}
							</h2>
						</div>
						) : (
						<details open={isSubMenu(currentPageMatch, lang, children) ? true : false}>
							<summary class="nav-group-title">
								<h2  class={isSubMenu(currentPageMatch, lang, children) ? 'focus-item' : ''}>
									{text}
									<svg
										xmlns="http://www.w3.org/2000/svg"
										viewBox="0 1 16 16"
										width="16"
										height="16"
										aria-hidden="true"
									>
										<path
											fill-rule="evenodd"
											d="M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z"
										/>
									</svg>
								</h2>
							</summary>
							<ul>
								{children.map(({ slug, text, isFallback }) => (
									<li class="nav-link">
										<a
											href={modelSlug(slug, isFallback, lang)} target={slug?.includes('https') ? "_blank" : "_self"}
											aria-current={`${currentPageMatch.endsWith(slug) ? 'page' : 'false'}`}
											data-current-parent={`${isSubPage(currentPageMatch, `/${lang}/${slug}`) ? 'true' : 'false'}`}
										>
											<Fragment set:html={text} /> {isFallback && <sup class="fallback">EN</sup>}
											{slug?.includes('https') &&
												<ExternalLinkIcon color="var(--theme-text-lighter)"/>
											}
										</a>
									</li>
								))}
							</ul>
						</details>
					)}
			</li>
		)}
	)
}

<script>
  const detailsElements = document.querySelectorAll('details');

  detailsElements.forEach((details) => {
    details.addEventListener('click', () => {
      detailsElements.forEach((otherDetails) => {
        if (otherDetails !== details && otherDetails.open) {
          otherDetails.open = false;
        }
      });
    });
  });
</script>

<style lang="scss">

	.hide-item-desktop { 
		@media (min-width: 50em) {
			display: none !important;
		}
	}
	.nav-group {
		line-height: 21px;
		margin-bottom: .5rem;
	}
	.nav-group .placeholder {
		opacity: 0.6;
		text-align: center;
		display: block;
	}
	@media (max-width: 50em) {
		.nav-group {
			padding-inline-start: 2rem;
		}
		.sm-hidden {
			display: none !important;
		}
	}
	@media (min-width: 50em) {
		.nav-group {
			display: none;
		}
	}
	.nav-group.active {
		display: block;
	}
	.nav-group-title {
		font-weight: 600;
		h2 {
			font-size: 1em;
			display: flex;
			align-items: center;
			padding: 0.2rem 0.5rem;
		}
		&:hover,
		&:focus, &[data-current-parent='true'] {
			background-color: var(--theme-bg-accent);
			border-radius: 4px;
		}
	}

	.nav-link-title a {
		font: inherit;
		color: var(--theme-text);
		text-decoration: none;
		line-height: 140%;
		margin-right: 0.5rem;
		&[aria-current='page'],
		&[data-current-parent='true'] {
			color: var(--color-orange);
			/* Indicates the current page for forced colors users in older browsers */

			&:focus {
				outline: 2px solid;
			}
		}

		@media (forced-colors: active) {
			&[aria-current='page'],
			&[data-current-parent='true'] {
				border: 1px solid LinkText;
			}
		}
	}

	li.nav-link {
		margin-bottom: .5rem
	}

	.nav-link a {
		margin: 1px;
		padding: 0.3rem 2rem;
		font: inherit;
		color: var(--theme-text-lighter);
		text-decoration: none;
		padding: .2rem 1rem;
		line-height: 140%;
		&:hover {
			background-color: var(--theme-bg-accent);
			border-radius: 4px;
		}

		&[aria-current='page'],
		&[data-current-parent='true'] {
			color: var(--color-orange) !important;
			background-color: var(--theme-bg-accent);
			/* Indicates the current page for forced colors users in older browsers */
			outline: 1px solid transparent;
			border-radius: 4px;

			&:focus {
				outline: 2px solid;
			}
		}

		@media (forced-colors: active) {
			&[aria-current='page'],
			&[data-current-parent='true'] {
				border: 1px solid LinkText;
			}
		}
	}

	@media (min-width: 50em) {
		.nav-group-title{
			padding: 0.2rem 0;		
			justify-content: space-between;	
			h2 {
				margin: 0;
				display: flex;
				flex-direction: row;
				justify-content: space-between;
				align-items: center;
			}
		}
		.nav-link a {
			padding: 0.2rem 1.5rem;
			display: flex;
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
		}

		.nav-link-title {

		}
	}

	:global(:root.theme-dark) .nav-link a[aria-current='page'],
	:global(:root.theme-dark) .nav-link a[data-current-parent='true'] {
		color: hsla(var(--color-base-white), 100%, 1);
	}

	.fallback {
		font-size: 0.75em;
		line-height: 1;
		font-weight: bold;
		color: var(--theme-text-light);
	}

	details > summary {
		color: var(--theme-text);
		list-style: none;
	}

	details > summary::marker,
	details > summary::-webkit-details-marker {
		display: none;
	}

	details[open] > summary {
		&[data-current-parent="true"] {
			background-color: var(--theme-bg-accent);
		}
	}

	details[open] > summary svg {
		transform: rotate(90deg);
		
	}

	.focus-item {
		color: var(--color-orange) !important;
	}

	details[open] > summary h2{
			/* Indicates the current page for forced colors users in older browsers */

			&:focus {
				outline: 2px solid;
			}
	}

	a {
		display: flex;
	}

	summary {
		cursor: pointer;
	}

	summary h2 {
		font-size: 1rem !important;
		margin: 0;
		padding: 0;
	}

	svg {
		transform: rotate(0);
		transition: 0.15s transform ease;
		vertical-align: middle;
	}

	:global([dir='rtl']) svg {
		transform: rotate(180deg);
	}

	svg path {
		fill: currentColor;
	}
</style>
