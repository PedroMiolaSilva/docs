---
import FallbackNotice from '../FallbackNotice.astro';
import ArticleNavigationButton from './ArticleNavigationButton.astro';

import Breadcrumb from 'primevue/breadcrumb';
// import Breadcrumb from '~/components/Breadcrumb.astro';
import ReadableContent from '../../../node_modules/@aziontech/azion-web-kit/src/templates/post/readable-content/index.vue';

import { rtlLanguages } from '~/i18n/languages';
import { normalizeLangTag } from '~/i18n/bcp-normalize';

import { getLanguageFromURL } from '~/util';
import { getPageBreadcrumb } from '~/util/getBreadcrumb';


export interface Props {
	content: { title: string };
	previous?: { text: string; link: string };
	next?: { text: string; link: string };
}

const {content, previous, next} = Astro.props;
const lang = getLanguageFromURL(Astro.url.pathname);
const isFallback = !!Astro.params.fallback || undefined;

const title = content.title.replace('@astrojs/', '<span class="scope">@astrojs/</span><wbr>').replaceAll('-', '&#8288;-&#8288;');
const bcpLang = normalizeLangTag(lang);
const direction = rtlLanguages.has(lang) ? 'rtl' : 'ltr';
const breadcrumbs = await getPageBreadcrumb(Astro, lang);
---


<div dir={isFallback ? 'ltr' : direction} lang={isFallback && 'en'}>
	{
		// For best cross-browser support of sticky or fixed elements, they must not be nested
		// inside elements that hide any overflow axis. The article hides `overflow-x`,
		// so we must place fixed UI elements like the mobile TOC here.
		Astro.slots.has('before-article') && (
			<>
				<div class="fixed-mobile-bar" dir={direction}>
					<slot name="before-article" />
				</div>
				<div class="spacer" />
			</>
		)
	}
	<article id="article" class="content">
		<section class="main-section">
			<div class="h-[24px] my-4">
				<Breadcrumb
					client:only="vue"
					home={{icon: 'pi pi-home', url: `/${lang}/`}}
					model={breadcrumbs}
				/>
			</div>
			<!-- <Breadcrumb breadcrumbs={breadcrumbs} lang={lang}/> -->
			
			<ReadableContent>
				<header>
					<slot name="before-title" />
					<h1 class="content-title" set:html={title} />
					<slot name="after-title" />
				</header>
				
				{
					isFallback && (
						<div lang={bcpLang} dir={direction}>
							<FallbackNotice />
						</div>
					)
				}
			</ReadableContent>
			
			<slot />
		</section>
	
		{
			(previous || next) && (
				<aside class="next-previous-nav">
					{previous && <ArticleNavigationButton rel="prev" item={previous} />}
					{next && <ArticleNavigationButton rel="next" item={next} />}
				</aside>
			)
		}
	</article>
</div>

<style>
	.fixed-mobile-bar {
		display: block;
		position: fixed;
		inset-inline: 0;
		top: 0;
		z-index: 2;
	}

	.spacer {
		height: var(--theme-mobile-toc-height);
	}

	@media (min-width: 50em) {
		.fixed-mobile-bar {
			inset-inline-start: var(--theme-left-sidebar-width);
			margin-top: 0;
		}
	}

	@media (min-width: 72em) {
		.fixed-mobile-bar {
			display: none;
		}
		.spacer {
			height: 0;
		}
	}

	.content-title :global(.scope) {
		font-weight: 300;
		color: var(--theme-text-lighter);
	}
	.content {
		padding-bottom: var(--doc-padding-block);
		padding-inline: var(--min-spacing-inline);
		width: 100%;
		height: 100%;
		max-width: 108ch;
		margin-inline: auto;
		display: flex;
		flex-direction: column;
		overflow-x: hidden;
	}

	.content > section {
		margin-bottom: 4rem;
	}
	.next-previous-nav {
		display: flex;
		flex-wrap: wrap;
		width: auto;
		gap: 1rem;
		margin-bottom: 1.5rem;
	}
</style>
